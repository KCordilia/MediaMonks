//
//  AlbumsInteractor.swift
//  MediaMonks
//
//  Created by Karim Cordilia on 01/03/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit
import Moya
import RxSwift

protocol AlbumsInteractorProtocol {
    func handleViewDidLoad()
    func getAlbums(page: Int)
    func loadNextPage()
}

class AlbumsInteractor: AlbumsInteractorProtocol {

    // MARK: DI
    var presenter: AlbumsPresenterProtocol
    private let errorHandler: ErrorHandlerProtocol
    private let provider: MoyaProvider<AlbumService>!
    private let disposeBag = DisposeBag()
    private var page = 1

    init(presenter: AlbumsPresenterProtocol,
         errorHandler: ErrorHandlerProtocol,
         provider: MoyaProvider<AlbumService>) {
        self.presenter = presenter
        self.errorHandler = errorHandler
        self.provider = provider
    }
    
    // MARK: Methods
    func handleViewDidLoad() {
        getAlbums(page: page)
    }

    func getAlbums(page: Int) {
        provider.rx
            .request(.getAlbums(page: page))
            .filterSuccessfulStatusCodes()
            .map([Album].self)
            .subscribe { [weak self] albums in
                self?.presenter.presentAlbums(albums: albums)
            } onError: { [weak self] error in
                self?.errorHandler.handle(error)
            }.disposed(by: disposeBag)
    }

    func loadNextPage() {
        page += 1
        getAlbums(page: page)
    }
}
